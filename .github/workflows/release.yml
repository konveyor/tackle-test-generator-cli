name: Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  tagged-release:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          ref: main
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Create maven settings.xml
        uses: s4u/maven-settings-action@v2.4.0
        with:
          servers: '[
            {"id": "github", "username": "$GITHUB_ACTOR", "password": "${{ secrets.TKLTEST_PKGS_PAT }}"},
            {"id": "github-sinha108", "username": "$GITHUB_ACTOR", "password": "${{ secrets.TKLTEST_PKGS_PAT }}"}
          ]'
      - name: Download Java libraries
        run: |
          cd lib
          sed -ie "s|GITHUB_USERNAME|$GITHUB_ACTOR|g" settings.xml
          sed -ie "s|GITHUB_TOKEN|${{ secrets.TKLTEST_PKGS_PAT }}|g" settings.xml
          cat ./settings.xml
          ./download_lib_jars.sh
          cd ..; ls lib/*
      - name: Get release tag
        id: get_release_tag
        run: echo ::set-output name=tag_name::${GITHUB_REF#refs/tags/}
      - name: Set archive file name
        id: set_file_name
        run: echo ::set-output name=file_name::${{ github.event.repository.name }}-${{ steps.get_release_tag.outputs.tag_name }}-all-deps
      - name: Create archive release (zip) with all dependencies
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: '${{ steps.set_file_name.outputs.file_name }}.zip'
          exclusions: '*.git*'
      - name: Create archive release (tar.gz) with all dependencies
        uses: thedoctor0/zip-release@master
        with:
          type: 'tar'
          filename: '${{ steps.set_file_name.outputs.file_name }}.tar.gz'
          exclusions: '*.git*'
      - name: Release
        uses: softprops/action-gh-release@v1
#        uses: ncipollo/release-action@v1
        with:
          files: |
            ${{ steps.set_file_name.outputs.file_name }}.zip
            ${{ steps.set_file_name.outputs.file_name }}.tar.gz