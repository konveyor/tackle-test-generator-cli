# ***************************************************************************
# Copyright IBM Corporation 2021
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ***************************************************************************

import logging
import os
import sys
import subprocess

from tkltest.util.api import dir_util
from tkltest.util import command_util
from tkltest.util.logging_util import tkltest_status


def process_execute_command(args, config):
    """Processes the api execute command.

    Processes the execute command and executes previously generated tests based on the subcommand specified with
    execute: {schemathesis}

    Args:
        args: command-line arguments
        config: loaded configuration options
    """
    logging.info('Processing execute command')

    if args.sub_command == "schemathesis":
        execute_schemathesis(config)
    else:
        tkltest_status("sub command " + args.sub_command + " not supported", error=True)
        sys.exit(1)


def execute_schemathesis(config):
    """ Replays api tests that were generated by Schemathesis and saved in a YAML cassette.

    Args:
        config: loaded configuration options
    """
    logging.info('Processing generate command')
    test_dir = dir_util.get_test_directory(config)
    app_name = config['general']['app_name']
    cassette_path = dir_util.get_cassette_path(test_dir, app_name)

    if not os.path.exists(cassette_path):
        tkltest_status('Cassette file {} does not exist'.format(cassette_path), error=True)
        sys.exit(1)

    st_command = "st replay {}".format(cassette_path)
    try:
        command_util.run_command(command=st_command, verbose=config['general']['verbose'])
    except subprocess.CalledProcessError as e:
        tkltest_status('Error executing tests: {}\n{}'.format(e, e.stderr), error=True)
        sys.exit(1)

    # TODO the replay prints the new status codes to stdout, we should save it to a file and parse
    tkltest_status('Executing Schemathesis tests is complete')
