<!-- 
 * (C) Copyright IBM Corporation 2015.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html  xmlns="http://www.w3.org/1999/xhtml" 
       xmlns:h="http://xmlns.jcp.org/jsf/html" 
       xmlns:f="http://xmlns.jcp.org/jsf/core"
       xmlns:ui="http://xmlns.jcp.org/jsf/facelets" 
       xmlns:fn="http://xmlns.jcp.org/jsp/jstl/functions">
<h:head>
	<title>DayTrader Primitives</title>
	<link rel="stylesheet" href="style-jsf.css" type="text/css" />
	<link rel="shortcut icon" href="./favicon.ico" />
</h:head>
<h:body>
	<div id="page-wrap">
		<div id="header">
			<img src="images/DayTraderHead_blue.gif" style="display: block; margin-left: auto; margin-right: auto" />

			<div id="nav">
				<ul id="list-nav">
					<li>
						<a href="index.faces">Home</a>
					</li>
					<li>
						<a href="welcome.faces">Login</a>
					</li>
					<li>
						<a href="configure.faces">Configuration</a>
					</li>
					<li>
						<a href="web_prmtv.faces">Primitives</a>
					</li>
					<li>
						<a href="docs/tradeFAQ.faces">FAQ</a>
					</li>
				</ul>
			</div>
		</div>

		<div id="content">

			<div id="contentContainer">
				<table width="100%" class="table">
					<tbody>
						<tr>
							<td>
								<h3>Web Primitive Tests</h3>
							</td>
							<td align="right"></td>
						</tr>
					</tbody>
				</table>

				<table class="table" border="1" width="100%">
					<tbody>
						<tr>
							<td colspan="1" bgcolor="#0066CC" align="center">
								<b>
									<font color="#FFFFFF">Primitive Test Suite</font>
								</b>
							</td>
						</tr>
						<tr>
							<td>
								<p>The DayTrader performance benchmark sample provides a suite of web primitives. These primitives singularly test key operations in the
									enterprise Java programming model. Links to each of the web primitive tests are provided below along with a description of each operation.</p>
								<p>
									Note that some primitives below can have their main operations repeated. These operations are marked with a red
									<font color="#CC0000">*</font>
									. In order to adjust the repetition, change the primitive iteration value in the Trade configuration page.
									<font></font>
								</p>
							</td>
						</tr>
					</tbody>
				</table>

				<table class="table" border="1" width="100%">
					<tbody>
						<tr>
							<td colspan="2" bgcolor="#0066CC" align="center">
								<b>
									<font color="#FFFFFF">Web Container ping suite</font>
								</b>
							</td>
						</tr>
						<tr>
							<td align="center">
								<font size="-1">
									<a href="PingHtml.html">
										<font face="Times New Roman">PingHtml</font>
									</a>
								</font>
							</td>
							<td>
								<font size="-1">PingHtml is the most basic operation providing access to a simple &quot;Hello World&quot; page of static HTML.</font>
							</td>
						</tr>
						<tr>
							<td align="center">
								<font size="-1">
									<a href="servlet/ExplicitGC" target="_self">
										<font face="Times New Roman">Explicit GC</font>
									</a>
								</font>
							</td>
							<td>
								<font size="-1">Invoke Garbage Collection on AppServer. Reports heap statistics after the GC has completed.</font>
							</td>
						</tr>
						<tr>
							<td align="center">
								<font size="-1">
									<a href="servlet/PingServlet" target="_self">
										<font face="Times New Roman">PingServlet</font>
									</a>
								</font>
							</td>
							<td>
								<font size="-1">PingServlet tests fundamental dynamic HTML creation through server side servlet processing.</font>
							</td>
						</tr>
						<tr>
                			<td align="center"><font size="-1"><a
                        href="servlet/PingServletCDI" target="_self"><font
                            face="Times New Roman">PingServletCDI</font></a></font></td>
                			<td><font size="-1">PingServletCDI tests
                        various simple CDI invocations.</font></td>
            			</tr>
            			<tr>
                			<td align="center"><font size="-1"><a
                        href="servlet/PingServletCDIBeanManagerViaJNDI" target="_self"><font
                            face="Times New Roman">PingServletCDIBeanManagerViaJNDI</font></a></font></td>
                			<td><font size="-1">PingServletCDIBeanManagerViaJNDI tests getting the BeanManager with JNDI.</font></td>
            			</tr>
            			<tr>
                			<td align="center"><font size="-1"><a
                        href="servlet/PingServletCDIBeanManagerViaCDICurrent" target="_self"><font
                            face="Times New Roman">PingServletCDIBeanManagerViaCDICurrentI</font></a></font></td>
                			<td><font size="-1">PingServletCDIBeanManagerViaCDICurrent tests getting the BeanManager with SPI.</font></td>
            			</tr>
						<tr>
							<td align="center">
								<font size="-1">
									<a href="servlet/PingServletWriter" target="_self">
										<font face="Times New Roman">PingServletWriter</font>
									</a>
								</font>
							</td>
							<td>
								<font size="-1">PingServletWriter extends PingServlet by using a PrintWriter for formatted output vs. the output stream used by
									PingServlet.</font>
							</td>
						</tr>
						<tr>
							<td align="center">
								<font size="-1">
									<a href="servlet/PingServlet2Include" target="_self">
										<font face="Times New Roman">PingServlet2Include</font>
									</a>
								</font>
								<font color="#CC0000">*</font>
							</td>
							<td>
								<font size="-1">PingServlet2Include tests response inclusion. Servlet 1 includes the response of Servlet 2.</font>
							</td>
						</tr>
						<tr>
							<td align="center">
								<font size="-1">
									<a href="servlet/PingServlet2Servlet" target="_self">
										<font face="Times New Roman">PingServlet2Servlet</font>
									</a>
								</font>
							</td>
							<td>
								<font size="-1">PingServlet2Servlet tests request dispatching. Servlet 1, the controller, creates a new JavaBean object forwards the
									request with the JavaBean added to Servlet 2. Servlet 2 obtains access to the JavaBean through the Servlet request object and provides
									dynamic HTML output based on the JavaBean data.</font>
							</td>
						</tr>
						<tr>
							<td align="center">
								<font size="-1">
									<a href="PingJsp.jsp">PingJSP</a>
								</font>
							</td>
							<td>
								<font size="-1">PingJSP tests a direct call to JavaServer Page providing server-side dynamic HTML through JSP scripting.</font>
							</td>
						</tr>
						<tr>
							<td align="center">
								<font size="-1">
									<a href="PingJspEL.jsp">PingJSPEL</a>
								</font>
							</td>
							<td>
								<font size="-1">PingJSPEL tests a direct call to JavaServer Page providing server-side dynamic HTML through JSP scripting and the usage
									of the new JSP 2.0 Expression Language.</font>
							</td>
						</tr>
						<tr>
							<td align="center">
								<font size="-1">
									<a href="servlet/PingServlet2Jsp">PingServlet2JSP</a>
								</font>
							</td>
							<td>
								<font size="-1">PingServlet2JSP tests a commonly used design pattern, where a request is issued to servlet providing server side
									control processing. The servlet creates a JavaBean object with dynamically set attributes and forwards the bean to the JSP through a
									RequestDispatcher The JSP obtains access to the JavaBean and provides formatted display with dynamic HTML output based on the JavaBean data.</font>
							</td>
						</tr>
						<tr>
							<td align="center">
								<font size="-1">
									<a href="servlet/PingServlet2PDF">PingServlet2PDF</a>
								</font>
							</td>
							<td>
								<font size="-1">PingServlet2PDF tests a call to a servlet which displays the contents of a PDF Document (~1 MB in file size).</font>
							</td>
						</tr>
						<tr>
							<td align="center">
								<font size="-1">
									<a href="servlet/PingServlet2DB">PingServlet2DB</a>
								</font>
							</td>
							<td>
								<font size="-1">PingServlet2DB tests a call to a servlet which makes a JDBC connection to the database.</font>
							</td>
						</tr>
						<tr>
							<td align="center">
								<font size="-1">
									<a href="PingJsf.faces">PingJSF</a>
								</font>
							</td>
							<td>
								<font size="-1">PingJSF tests a call to a JSF Facelet which performs a lookup of quotes.</font>
							</td>
						</tr>
				        <tr>
                			<td align="center"><font size="-1"><a
                        href="PingCDIJSF.faces" target="_self"><font
                            face="Times New Roman">PingCDIJSF</font></a></font></td>
                			<td><font size="-1">PingCDIJSF tests a MangedBean called from a jsf page.</font></td>
            			</tr>
						<tr>
							<td align="center">
								<font size="-1">
									<a href="servlet/PingSession1">PingHTTPSession1</a>
								</font>
							</td>
							<td>
								<font size="-1">
									PingHTTPSession1 -
									<b>SessionID</b>
									tests fundamental HTTP session function by creating a unique session ID for each individual user. The ID is stored in the users session and
									is accessed and displayed on each user request.
								</font>
							</td>
						</tr>
						<tr>
							<td align="center">
								<font size="-1">
									<a href="servlet/PingSession2">PingHTTPSession2</a>
								</font>
							</td>
							<td>
								<font size="-1">
									PingHTTPSession2
									<b>session create/destroy </b>
									further extends the previous test by invalidating the HTTP Session on every 5th user access. This results in testing HTTPSession create and
									destroy
								</font>
							</td>
						</tr>
						<tr>
							<td align="center">
								<a href="servlet/PingSession3">
									<font size="-1">PingHTTPSession3</font>
								</a>
							</td>
							<td>
								<font size="-1">
									PingHTTPSession3
									<b>large session object </b>
									tests the servers ability to manage and persist large HTTPSession data objects. The servlet creates a large custom java object. The class
									contains multiple data fields and results in 2048 bytes of data. This large session object is retrieved and stored to the session on each
									user request.
								</font>
							</td>
						</tr>
						<tr>
							<td align="center">
								<a href="servlet/PingJDBCRead">
									<font size="-1">PingJDBCRead</font>
								</a>
								<font color="#CC0000">*</font>
							</td>
							<td>
								<font size="-1">PingJDBCRead tests fundamental servlet to JDBC access to a database performing a single-row read using a prepared SQL
									statment.</font>
							</td>
						</tr>
						<tr>
							<td align="center">
								<a href="servlet/PingJDBCWrite">
									<font size="-1">PingJDBCWrite</font>
								</a>
								<font color="#CC0000">*</font>
							</td>
							<td>
								<font size="-1">PingJDBCRead tests fundamental servlet to JDBC access to a database performing a single-row write using a prepared SQL
									statment.</font>
							</td>
						</tr>
						<tr>
							<td align="center">
								<a href="servlet/PingServlet2JNDI">
									<font size="-1">PingServlet2JNDI</font>
								</a>
								<font color="#CC0000">*</font>
							</td>
							<td>
								<font size="-1">PingServlet2JNDI tests the fundamental J2EE operation of a servlet allocating a JNDI context and performing a JNDI
									lookup of a JDBC DataSource.</font>
							</td>
						</tr>
                        <tr>
                            <td align="center"><a href="servlet/PingUpgradeServlet"><font size="-1">PingUpgradeServlet</font></a></td>
                            <td><font size="-1">PingUpgradeServlet tests a simple UpgradeHandler request. JMeter is needed for testing.</font></td>
                        </tr>
						<tr>
                            <td align="center"><a href="PingWebSocketTextSync.html"><font size="-1">PingWebSocketTextSync</font></a></td>
                            <td><font size="-1">PingWebSocketTextSync tests a simple synchronous WebSocket with text.</font></td>
                        </tr>
                        <tr>
                            <td align="center"><a href="PingWebSocketTextAsync.html"><font size="-1">PingWebSocketTextAsync</font></a></td>
                            <td><font size="-1">PingWebSocketTextAsync tests a simple asynchronous WebSocket with text.</font></td>
                        </tr>
                        <tr>
                            <td align="center"><a href="PingWebSocketBinary.html"><font size="-1">PingWebSocketBinary</font></a></td>
                            <td><font size="-1">PingWebSocketBinary tests a simple WebSocket with binary data.</font></td>
                        </tr>
                        <tr>
                            <td align="center"><a href="PingWebSocketJson.html"><font size="-1">PingWebSocketJson</font></a></td>
                            <td><font size="-1">PingWebSocketJson tests a WebSocket with a JSON Decoder and Encoder.</font></td>
                        </tr>
						<tr>
							<td align="center">
								<a href="servlet/PingManagedThread">
									<font size="-1">PingManagedThread</font>
								</a>
								<font color="#CC0000"></font>
							</td>
							<td>
								<font size="-1">PingManagedThread tests a ManagedThreadFactory inside an asynchronous servlet.</font>
							</td>
						</tr>
						<tr>
							<td align="center">
								<a href="servlet/PingManagedExecutor">
									<font size="-1">PingManagedExecutor</font>
								</a>
								<font color="#CC0000"></font>
							</td>
							<td>
								<font size="-1">PingManagedExecutor tests the ManagedExecutorService inside an asynchronous servlet.</font>
							</td>
						</tr>
                        
                        <tr>
                            <td align="center">
                                <a href="servlet/PingJSONP">
                                    <font size="-1">PingJSONP</font>
                                </a>
                                <font color="#CC0000"></font>
                            </td>
                            <td>
                                <font size="-1">PingJSONP tests generating and parsing JSON.</font>
                            </td>
                        </tr>
						<tr>
							<td colspan="2" bgcolor="#0066CC" align="center">
								<b>
									<font color="#FFFFFF">EJB 3 Container ping suite</font>
								</b>
							</td>
						</tr>

						<tr>
							<td align="center">
								<a href="ejb3/PingServlet2Session">
									<font size="-1">PingServlet2Session</font>
								</a>
								<font color="#CC0000">*</font>
							</td>
							<td>
								<font size="-1">PingServlet2Session tests key function of a servlet call to a remote stateless Session EJB. The Session EJB performs a
									simple calculation and returns the result</font>
							</td>
						</tr>
						<tr>
							<td align="center">
								<a href="ejb3/PingServlet2SessionLocal">
									<font size="-1">PingServlet2SessionLocal</font>
								</a>
								<font color="#CC0000">*</font>
							</td>
							<td>
								<font size="-1">PingServlet2SessionLocal tests key function of a servlet call to a local stateless Session EJB. The Session EJB
									performs a simple calculation and returns the result</font>
							</td>
						</tr>
						<!--<TR>
            <TD align="center"><A href="ejb3/PingServlet2Entity"><FONT
                size="-1">PingServlet2Entity</FONT></A><FONT COLOR="#CC0000">*</FONT><BR/></TD>
            <TD><FONT size="-1">PingServlet2Entity tests key function of a
            servlet call to an EJB 3.0 Container Managed Entity. In this test the
            EJB entity represents a single row in the database table.</FONT></TD>
        </TR>-->
						<tr>
							<td align="center">
								<a href="ejb3/PingServlet2Session2Entity">
									<font size="-1">PingServlet2Session2Entity</font>
								</a>
								<font color="#CC0000">*</font>
							</td>
							<td>
								<font size="-1">This tests the full servlet to Session EJB to Entity EJB path to retrieve a single row from the database.</font>
							</td>
						</tr>
						<tr>
							<td align="center">
								<a href="ejb3/PingServlet2Session2Entity2JSP">
									<font size="-1">PingServlet2Session2Entity2JSP</font>
								</a>
								<font color="#CC0000">*</font>
							</td>
							<td>
								<font size="-1">This tests the full servlet to Session EJB to Entity EJB path to retrieve a single row from the database and displays
									the output in a JSP.</font>
							</td>
						</tr>
						<tr>
							<td align="center">
								<a href="ejb3/PingServlet2Session2EntityCollection">
									<font size="-1">
										PingServlet2Session2
										<br />
										EntityCollection
									</font>
								</a>
								<font color="#CC0000">*</font>
							</td>
							<td>
								<font size="-1">This test extends the previous EJB Entity test by calling a Session EJB which uses a finder method on the Entity that
									returns a collection of Entity objects. Each object is displayed by the servlet.</font>
							</td>
						</tr>
						<tr>
							<td align="center">
								<a href="ejb3/PingServlet2Session2CMROne2One">
									<font size="-1">PingServlet2Session2CMROne2One</font>
								</a>
								<font color="#CC0000">*</font>
							</td>
							<td>
								<font size="-1">This test drives an Entity EJB to get another Entity EJB's data through an EJB 3.0 CMR One to One relationship.</font>
							</td>
						</tr>
						<tr>
							<td align="center">
								<a href="ejb3/PingServlet2Session2CMROne2Many">
									<font size="-1">PingServlet2Session2CMROne2Many</font>
								</a>
								<font color="#CC0000">*</font>
							</td>
							<td>
								<font size="-1">This test drives an Entity EJB to get another Entity EJB's data through an EJB 3.0 CMR One to Many relationship.</font>
							</td>
						</tr>
						<tr>
							<td align="center">
								<a href="ejb3/PingServlet2Session2JDBC">
									<font size="-1">PingServlet2Session2JDBC</font>
								</a>
								<font color="#CC0000">*</font>
							</td>
							<td>
								<font size="-1">This tests the full servlet to Session EJB to JDBC path to retrieve a single row from the database.</font>
							</td>
						</tr>
						<tr>
							<td align="center">
								<a href="ejb3/PingServlet2Session2JDBCCollection">
									<font size="-1">
										PingServlet2Session2
										<br />
										JDBCCollection
									</font>
								</a>
								<font color="#CC0000">*</font>
							</td>
							<td>
								<font size="-1">This test extends the previous JDBC test by calling a Session EJB to JDBC path which returns multiple rows from the
									database.</font>
							</td>
						</tr>
						<tr>
							<td align="center">
								<a href="ejb3/PingServlet2MDBQueue">
									<font size="-1">PingServlet2MDBQueue</font>
								</a>
								<font color="#CC0000">*</font>
							</td>
							<td>
								<font size="-1">
									PingServlet2MDBQueue drives messages to a Queue based Message Driven EJB (MDB). Each request to the servlet posts a message to the Queue. The
									MDB receives the message asynchronously and prints message delivery statistics on each 100th message.
									<font color="red">
										<b>Note:</b>
										Not intended for performance testing.
									</font>
								</font>
							</td>
						</tr>
						<tr>
							<td align="center">
								<a href="ejb3/PingServlet2MDBTopic">
									<font size="-1">PingServlet2MDBTopic</font>
								</a>
								<font color="#CC0000">*</font>
							</td>
							<td>
								<font size="-1">
									PingServlet2MDBTopic drives messages to a Topic based Publish/Subscribe Message Driven EJB (MDB). Each request to the servlet posts a message
									to the Topic. The TradeStreamMDB receives the message asynchronously and prints message delivery statistics on each 100th message. Other
									subscribers to the Topic will also receive the messages.
									<font color="red">
										<b>Note:</b>
										Not intended for performance testing.
									</font>
								</font>
							</td>
						</tr>
						<tr>
							<td align="center">
								<a href="ejb3/PingServlet2TwoPhase">
									<font size="-1">PingServlet2TwoPhase</font>
								</a>
								<font color="#CC0000">*</font>
							</td>
							<td>
								<font size="-1">PingServlet2TwoPhase drives a Session EJB which invokes an Entity EJB with findByPrimaryKey (DB Access) followed by
									posting a message to an MDB through a JMS Queue (Message access). These operations are wrapped in a global 2-phase transaction and commit.</font>
							</td>
						</tr>
					</tbody>
				</table>
			</div>
		</div>
	</div>
	<div id="footer"></div>
</h:body>
</html>