package irs;

import javax.json.Json;
import javax.json.JsonObject;
import javax.json.JsonObjectBuilder;
import javax.servlet.http.HttpServletResponse;
import javax.ws.rs.Consumes;
import javax.ws.rs.FormParam;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.WebApplicationException;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import java.util.logging.Logger;

import com.ibm.cardinal.util.CardinalException;
import com.ibm.cardinal.util.CardinalLogger;
import com.ibm.cardinal.util.CardinalString;
import com.ibm.cardinal.util.ClusterObjectManager;
import com.ibm.cardinal.util.SerializationUtil;

/**
 * Service class for Salary - Generated by Cardinal
 */

@Path("/SalaryService")
public class SalaryService {
    private static final Logger klu__logger = CardinalLogger.getLogger(SalaryService.class);




    // health check service
    @GET 
    @Path("/health") 
    @Produces(MediaType.TEXT_HTML) 
    public String getHealth() { 
        klu__logger.info("[Salary] getHealth() called");
        return "SalaryService::Health OK"; 
    }



    // service for incrementing object reference count
    @POST
    @Path("/incObjectCount")
    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)
    public void incObjectCount(@FormParam("klu__referenceID") String klu__referenceID) {
        klu__logger.info("[SalaryService] incObjectCount() called with ref: "+klu__referenceID);
        ClusterObjectManager.incObjectCount(klu__referenceID);
    }



    // service for decrementing object reference count
    @POST
    @Path("/decObjectCount")
    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)
    public void decObjectCount(@FormParam("klu__referenceID") String klu__referenceID) {
        klu__logger.info("[Salary] decObjectCount() called with ref: "+klu__referenceID);
        ClusterObjectManager.decObjectCount(klu__referenceID);
    }





    @POST
    @Path("/Salary_001")
    @Produces(MediaType.APPLICATION_JSON)
    public Response Salary_001(
        @Context HttpServletResponse servletResponse
    ) {

        // call constructor, add created object to cluster object manager, and return ref ID
        Salary instSalary;
        try {
            instSalary = new Salary();
        }
        catch (java.lang.Throwable t) {
            String msg = "Call to constructor Salary() raised exception: "+t.getMessage();
            klu__logger.warning(msg);
            throw new WebApplicationException(msg, t, CardinalException.APPLICATION_EXCEPTION);
        }
        String refid = ClusterObjectManager.putObject(instSalary);
        instSalary.setKlu__referenceID(refid);
        JsonObject jsonobj = Json
            .createObjectBuilder()
            .add("return_value", refid)
            .build();
        return Response
            .status(Response.Status.OK)
            .entity(jsonobj)
            .build();
    }

    @POST
    @Path("/Salary_002")
    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)
    @Produces(MediaType.APPLICATION_JSON)
    public Response Salary_002(
        @FormParam("employerId") String employerId,
        @FormParam("employeeId") String employeeId,
        @FormParam("salary") String salary,
        @Context HttpServletResponse servletResponse
    ) {

        int employerId_fpar = Integer.parseInt(employerId);

        int employeeId_fpar = Integer.parseInt(employeeId);

        double salary_fpar = Double.parseDouble(salary);

        // call constructor, add created object to cluster object manager, and return ref ID
        Salary instSalary;
        try {
            instSalary = new Salary(employerId_fpar, employeeId_fpar, salary_fpar);
        }
        catch (java.lang.Throwable t) {
            String msg = "Call to constructor Salary() raised exception: "+t.getMessage();
            klu__logger.warning(msg);
            throw new WebApplicationException(msg, t, CardinalException.APPLICATION_EXCEPTION);
        }
        String refid = ClusterObjectManager.putObject(instSalary);
        instSalary.setKlu__referenceID(refid);
        JsonObject jsonobj = Json
            .createObjectBuilder()
            .add("return_value", refid)
            .build();
        return Response
            .status(Response.Status.OK)
            .entity(jsonobj)
            .build();
    }

    @POST
    @Path("/getEmployerId")
    @Produces(MediaType.APPLICATION_JSON)
    public Response getEmployerId(
        @FormParam("klu__referenceID") String klu__referenceID,
        @Context HttpServletResponse servletResponse
    ) {

        int response;

        // dynamically dispatched method: using reference ID, get object from cluster object manager and
        // call method on the object
        Salary instSalary = (Salary)ClusterObjectManager.getObject(klu__referenceID);

        try {
            response = instSalary.getEmployerId();
        }
        catch (java.lang.Throwable t) {
            String msg = "Call to method getEmployerId() of Salary raised exception: "+t.getMessage();
            klu__logger.warning(msg);
            throw new WebApplicationException(msg, t, CardinalException.APPLICATION_EXCEPTION);
        }
        JsonObjectBuilder jsonresp = Json.createObjectBuilder();
        JsonObject jsonobj = jsonresp.add("return_value", String.valueOf(response)).build();
        klu__logger.info("[Salary] Returning JSON object: "+jsonobj.toString());
        return Response
            .status(Response.Status.OK)
            .entity(jsonobj)
            .build();

    }

    @POST
    @Path("/setEmployerId")
    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)
    public void setEmployerId(
        @FormParam("klu__referenceID") String klu__referenceID,
        @FormParam("employerId") String employerId,
        @Context HttpServletResponse servletResponse
    ) {

        int employerId_fpar = Integer.parseInt(employerId);

        // dynamically dispatched method: using reference ID, get object from cluster object manager and
        // call method on the object
        Salary instSalary = (Salary)ClusterObjectManager.getObject(klu__referenceID);

        try {
            instSalary.setEmployerId(employerId_fpar);
        }
        catch (java.lang.Throwable t) {
            String msg = "Call to method setEmployerId() of Salary raised exception: "+t.getMessage();
            klu__logger.warning(msg);
            throw new WebApplicationException(msg, t, CardinalException.APPLICATION_EXCEPTION);
        }

    }

    @POST
    @Path("/getEmployeeId")
    @Produces(MediaType.APPLICATION_JSON)
    public Response getEmployeeId(
        @FormParam("klu__referenceID") String klu__referenceID,
        @Context HttpServletResponse servletResponse
    ) {

        int response;

        // dynamically dispatched method: using reference ID, get object from cluster object manager and
        // call method on the object
        Salary instSalary = (Salary)ClusterObjectManager.getObject(klu__referenceID);

        try {
            response = instSalary.getEmployeeId();
        }
        catch (java.lang.Throwable t) {
            String msg = "Call to method getEmployeeId() of Salary raised exception: "+t.getMessage();
            klu__logger.warning(msg);
            throw new WebApplicationException(msg, t, CardinalException.APPLICATION_EXCEPTION);
        }
        JsonObjectBuilder jsonresp = Json.createObjectBuilder();
        JsonObject jsonobj = jsonresp.add("return_value", String.valueOf(response)).build();
        klu__logger.info("[Salary] Returning JSON object: "+jsonobj.toString());
        return Response
            .status(Response.Status.OK)
            .entity(jsonobj)
            .build();

    }

    @POST
    @Path("/setEmployeeId")
    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)
    public void setEmployeeId(
        @FormParam("klu__referenceID") String klu__referenceID,
        @FormParam("employeeId") String employeeId,
        @Context HttpServletResponse servletResponse
    ) {

        int employeeId_fpar = Integer.parseInt(employeeId);

        // dynamically dispatched method: using reference ID, get object from cluster object manager and
        // call method on the object
        Salary instSalary = (Salary)ClusterObjectManager.getObject(klu__referenceID);

        try {
            instSalary.setEmployeeId(employeeId_fpar);
        }
        catch (java.lang.Throwable t) {
            String msg = "Call to method setEmployeeId() of Salary raised exception: "+t.getMessage();
            klu__logger.warning(msg);
            throw new WebApplicationException(msg, t, CardinalException.APPLICATION_EXCEPTION);
        }

    }

    @POST
    @Path("/getSalary")
    @Produces(MediaType.APPLICATION_JSON)
    public Response getSalary(
        @FormParam("klu__referenceID") String klu__referenceID,
        @Context HttpServletResponse servletResponse
    ) {

        double response;

        // dynamically dispatched method: using reference ID, get object from cluster object manager and
        // call method on the object
        Salary instSalary = (Salary)ClusterObjectManager.getObject(klu__referenceID);

        try {
            response = instSalary.getSalary();
        }
        catch (java.lang.Throwable t) {
            String msg = "Call to method getSalary() of Salary raised exception: "+t.getMessage();
            klu__logger.warning(msg);
            throw new WebApplicationException(msg, t, CardinalException.APPLICATION_EXCEPTION);
        }
        JsonObjectBuilder jsonresp = Json.createObjectBuilder();
        JsonObject jsonobj = jsonresp.add("return_value", String.valueOf(response)).build();
        klu__logger.info("[Salary] Returning JSON object: "+jsonobj.toString());
        return Response
            .status(Response.Status.OK)
            .entity(jsonobj)
            .build();

    }

    @POST
    @Path("/setSalary")
    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)
    public void setSalary(
        @FormParam("klu__referenceID") String klu__referenceID,
        @FormParam("salary") String salary,
        @Context HttpServletResponse servletResponse
    ) {

        double salary_fpar = Double.parseDouble(salary);

        // dynamically dispatched method: using reference ID, get object from cluster object manager and
        // call method on the object
        Salary instSalary = (Salary)ClusterObjectManager.getObject(klu__referenceID);

        try {
            instSalary.setSalary(salary_fpar);
        }
        catch (java.lang.Throwable t) {
            String msg = "Call to method setSalary() of Salary raised exception: "+t.getMessage();
            klu__logger.warning(msg);
            throw new WebApplicationException(msg, t, CardinalException.APPLICATION_EXCEPTION);
        }

    }

}