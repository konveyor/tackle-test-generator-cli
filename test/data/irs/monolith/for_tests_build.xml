<project name="irs" default="compile-classpath-attribute" basedir=".">
    <!-- This build.xml was written for test purposes, should not be used to compile the app! -->
    
  <!-- The directories for compilation targets -->
  <property name="build.home"              value="target"/>
  <property name="build.classes"           value="${build.home}/classes"/>
	
  <!-- The base directories for sources -->
  <property name="source.java"             value="src/main/java"/>
  <property name="test.java"               value="src/test/java"/>

  <property name="lib.dir"                 value="../lib/"/>

  <!-- The dependency libraries -->
  <path id="source.lib">
       <filelist dir="${lib.dir}">
           <file name="commons-logging-1.1.2.jar"/>
           <file name="javax.annotation-api-1.3.2.jar"/>
           <file name="javax.json-api-1.0.jar"/>
           <file name="javax.servlet-api-3.1.0.jar"/>
           <file name="javax.ws.rs-api-2.0.jar"/>
           <file name="resteasy-client-3.0.8.Final.jar"/>
           <file name="resteasy-jaxrs-3.0.8.Final.jar"/>
       </filelist>
  </path>
  
  <pathconvert refid="source.lib"
               property="source.lib.property" />
    
    <path id="build.classes.pathid" path="target/classes" />
    
    <pathconvert refid="build.classes.pathid"
               property="build.classes.refid" />
  

  <path id="source.lib.only.commons">
      <fileset dir="${lib.dir}">
          <include name="commons*.jar"/>
      </fileset>
  </path>

  <path id="source.lib.other">
      <filelist dir="${lib.dir}">
           <file name="javax.annotation-api-1.3.2.jar"/>
           <file name="javax.json-api-1.0.jar"/>
           <file name="javax.servlet-api-3.1.0.jar"/>
           <file name="javax.ws.rs-api-2.0.jar"/>
           <file name="resteasy-client-3.0.8.Final.jar"/>
           <file name="resteasy-jaxrs-3.0.8.Final.jar"/>
       </filelist>
  </path>    
    

<!-- ====================================================================== -->
<!-- ========== Executable Targets ======================================== -->
<!-- ====================================================================== -->

  <target name="clean"
          description="Clean build and distribution directories">
    <delete dir="${build.home}"/>
  </target>

<!-- ====================================================================== -->

  <target name="prepare"
          description="Prepare build directory">
      <mkdir dir="${build.home}"/>
  </target>

<!-- ====================================================================== -->

  <target name="compile-classpath-attribute" depends="prepare"
          description="Compile main code passing classpath attribute to javac, destdir is a property">
    <delete dir="${build.classes}"/>
    <mkdir dir="${build.classes}"/>
    <javac  srcdir="${source.java}"
           destdir="${build.classes}"
            includeantruntime="no"
            classpath="${source.lib.property}">
    </javac>
  </target>

    
  <target name="compile-classpathref-attribute" depends="prepare"
          description="Compile main code passing classpathref attribute to javac, destdir is a relative path">
    <delete dir="${build.classes}"/>
    <mkdir dir="${build.classes}"/>
    <javac  srcdir="${source.java}"
           destdir="target/classes"
            includeantruntime="no"
          classpathref="source.lib"/>
  </target>
    
    
  <target name="compile-classpath-element" depends="prepare"
          description="For test, will not compile! destdir not specified - equals to srcdir">
    <delete dir="${build.classes}"/>
    <mkdir dir="${build.classes}"/>
    <javac  srcdir="${build.classes}"
            includeantruntime="no">
          <classpath>
              <path refid="source.lib.only.commons"/>
              <path refid="source.lib.other"/>
          </classpath>
    </javac>          
  </target>
    
    
    <target name="compile-destdir-through-modulesourcepath" depends="prepare"
          description="For test, will not compile! destdir not specified - equals to modulesourcepath">
    <delete dir="${build.classes}"/>
    <mkdir dir="${build.classes}"/>
    <javac  modulesourcepath="${build.classes}"
            includeantruntime="no"
            classpathref="source.lib"/>
  </target>
  

<target name="compile-destdir-through-modulesourcepathref" depends="prepare"
          description="For test, will not compile! destdir not specified - equals to modulesourcepathref">
    <delete dir="${build.classes}"/>
    <mkdir dir="${build.classes}"/>
    <javac  modulesourcepathref="build.classes.pathid"
            includeantruntime="no"
            classpathref="source.lib"/>     
  </target>

<target name="compile-destdir-through-src-elements" depends="prepare"
          description="For test, will not compile! destdir not specified - equals to modulesourcepathref">
    <delete dir="${build.classes}"/>
    <mkdir dir="${build.classes}"/>
    <javac  includeantruntime="no"
            classpathref="source.lib">
            <src path="${build.classes}/nonexistent_dir" />
            <src path="${build.classes}/irs" />
    </javac>          
  </target>

<!-- ====================================================================== -->    
  
</project>
